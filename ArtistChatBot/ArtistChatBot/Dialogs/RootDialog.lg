> RootDialog.lg
> Language Generation for Root dialog. 
> EyalS
> Reference: See https://github.com/Microsoft/BotBuilder-Samples/tree/master/experimental/language-generation

# WelcomeCard
[HeroCard   
    title = Artist Chat Bot
    subtitle = Share and Learn About Team Music Favorites
    text = Follow the interview to share your favorite artists with your peers and find out what your peers are listening to.
    image = https://localhost:44324/images/WelcomeLZ.jpg
    buttons = Start Here | Help
]

# UnknownIntent
- English please. I didn't get this last thing you mumbled. Type clearly (@{TryHelp()}).
- I didn't get that. Type clearly (@{TryHelp()}). 

# TryHelp
- Type 'help' to get a little help from your friends
- Type 'help'. It may help. Or may not

# CancelConfirmation
- Alright, we're done for now. Gracias.
- Why? Why abandon me now? We just got to know each other. I'm disapointed (just kiddin'). Got you. ttyl.
- Ok. See you later.

# BotOverviewHelp
[Activity
    Text = Here's how it goes. I interview you about your favorite musicians or bands. I get smarter. You interview me about music "gossip" amongst your colleagues. You get friendlier. That's it. Oh, why? Becuase you like music, and I need a bot.
    SuggestedActions = Start Here | Shortcuts
]

# Shortcuts
- ```
	Here are a few shortcuts:
	- Feed: You feed the bot, suggest new artists. The bot interviews you to find out about your music preferences. 
	- Eat: I feed you. I tell you stats (i.e. gossip) about your colleagues music preferences so you can befriend (or "educate" them and get smacked :)).
	- Help: Some ramble about what you can do here.
	- Restart: Back to welcome. Restart the whole shebang. Cancel all dialogs, you know the drill.
	- Complain: Suggest an idea, improvement, a bug. We'll take you to github etc. [Future/never feature]
	- Login: Get certified as an official contributer, we won't ask for your name. [Future/ever feature]
```

# Placeholder
- Yeah, right, one day, maybe. Hold tight, wait for the galaxy supernova blowup. It'll be here any minute.
- Not ready, won't be ready - unless you code it up yourself. 
- We're thinking about it (not really, we're thinking about a vacation in Hawaii, why would I think about this?).
- Get real. It's not real. It's a bot. Well one day we may implement this (or not).

# Restart
- Restarting...
- In the beginning, there was only one band. Restarting...

# Greetings
- Hello, how's it going (don't answer, I don't expect an answer, just saying hi).
- Hello. I'm @{WhoAmI()}. 
- Greetings. I'm @{WhoAmI()}. 

# WhoAmI
- I am the original Elvis Presley. Really. I am also a bot that likes to chat about favorite artists.
- I am John Bonham. An amazing drummer and an idiot drunk. Not really. I am a bot that likes to chat about favorite artists.
- I am a bot. A chat bot. That is, a robot that wanna talk about favorite artists, you know, shoot the breeze. 

# AskForName
- Who are you? What's your **unique** name? For example, I'm Eyal... you can't be Chris :) We'll use that name to tag your input. If you think we should have proper login, you're right. One day (that day, when you pitch in and code up the login integration).
- What's your **unique** name? Use one you can remember, one that we can use to tag your input uniquely. You can also use your social security number, mother's maiden name and bank account. Or just your microsoft alias. You get the gist.

# AckName
- Thanks, @{CapitalizeName(user.userProfile.Name)}.

# HiName
- Hello @{CapitalizeName(user.userProfile.Name)}.
- Hi @{CapitalizeName(user.userProfile.Name)}.
- Hola @{CapitalizeName(user.userProfile.Name)}.

# NextPrompt
- What would you like to do?
- Ready to roll? How can I help you today?
- Let's roll. Here's a little help from some friends.

# CapitalizeName(param)
- @{concat(toUpper(substring(param, 0, 1)), substring(param, 1))}


> --
> BUGBUG: Remove, left for reference from original sample
> --

# AgeConfirmPrompt
- Would you like to give your age?

# AskForAge
- what is your age?

# AskForAge.invalid
- Sorry, '@{this.value}'' does not work. I'm looking for a value between 1-150. @{AskForAge()}
- Sorry, that does not work. Your age must be greater than 0 and less than 150. @{AskForAge()}

# AskForAge.unRecognized
- Sorry, I do not recognized '@{this.value}'. @{AskForAge()}

# NoName
- No age given.

# UserAgeReadBack 
- IF: @{user.userProfile.Age == null}
   - And, No age given.
- ELSE: 
   - And, I have your age as @{user.userProfile.Age}.
   - You are @{user.userProfile.Age} years old.

# ConfirmPrompt
- Is this ok?

> This template uses inline expressions. Expressions are defined using the common expression language. 
> See https://github.com/Microsoft/BotBuilder-Samples/tree/master/experimental/common-expression-language to learn more.
# FinalUserProfileReadOut
- IF: @{turn.finalConfirmation == true}
    - I have your mode of transport as @{user.userProfile.Transport} and your name as @{CapitalizeName(user.userProfile.Name)}. @{UserAgeReadBack()}
- ELSE:
    - Thanks. Your profile will not be kept.

> Structured template defintion.
# ModeOfTransportPrompt
[Activity
    Text = @{ModeOfTransportPrompt.Text()}
    SuggestedActions = Car | Bus | Other
]

# ModeOfTransportPrompt.Text
- What is your favoriate mode of transportion?
- Please enter your mode of transport.